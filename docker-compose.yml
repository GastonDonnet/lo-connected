version: "3.8"
services:
  web-client:
    build: ./client/
    networks:
      - frontend
    volumes:
      - ./client/dist:/app/dist

  web-admin:
    build: ./admin/
    networks:
      - frontend
    volumes:
      - ./admin/dist:/app/dist

  db:
    image: mariadb
    restart: always
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: test

    volumes:
      - ./docker/database:/var/lib/mysql

  adminer:
    image: adminer
    restart: always

  node-api:
    build: ./server/
    image: node-api
    container_name: node-api
    restart: unless-stopped
    stdin_open: true # docker run -i
    tty: true # docker run -t
    networks:
      - backend
    depends_on:
      - db

  nginx-server:
    image: nginx:mainline-alpine
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx:/etc/nginx
      - ./client/dist:/var/www/loconected.com/
      - ./client/dist:/var/www/admin.loconected.com/
      # - ./docker/certbot/conf:/etc/letsencrypt
      # - ./docker/certbot/www:/var/www/certbot
    depends_on:
      - node-api
      - web-admin
      - web-client
    networks:
      - backend
      - frontend
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  # certbot:
  #   image: certbot/certbot
  #   depends_on:
  #     - nginx-server
  #   volumes:
  #     - ./docker/certbot/conf:/etc/letsencrypt
  #     - ./docker/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
